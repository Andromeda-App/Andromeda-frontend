{"version":3,"sources":["components/IssCard/Map.js","App.js","reportWebVitals.js","index.js"],"names":["ISS_URL","img","src","alt","height","SpaceStation","Map","state","center","lat","lng","zoom","getCoordinates","fetch","then","res","json","data","setState","iss_position","latitude","longitude","this","interval","setInterval","clearInterval","console","log","className","style","width","bootstrapURLKeys","key","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQASMA,EAAU,0CAEVC,EAAM,qBAAKC,IAAM,gEAAgEC,IAAM,MAAMC,OAAS,SACtGC,EAAe,SAAC,GAAD,IAAGJ,EAAH,EAAGA,IAAH,OAAa,8BAAMA,KAElCK,E,4MACFC,MAAQ,CACJC,OAAQ,CACJC,IAAK,EACLC,IAAK,GAETC,KAAM,G,EAYVC,eAAiB,WACbC,MAAMb,GACDc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CACxBV,OAAQ,CACJC,IAAKQ,EAAKE,aAAaC,SACvBV,IAAKO,EAAKE,aAAaE,iB,uDAfvC,WACIC,KAAKV,iBACLU,KAAKC,SAAWC,YAAYF,KAAKV,eAAgB,O,kCAGrD,WACIa,cAAcH,KAAKC,Y,oBAcvB,WAGI,OAFAG,QAAQC,IAAI,OAAQL,KAAKf,MAAMC,OAAOC,KACtCiB,QAAQC,IAAI,OAAQL,KAAKf,MAAMC,OAAOE,KAElC,gCACI,2CAAcY,KAAKf,MAAMC,OAAOC,OAChC,4CACA,qBAAKmB,UAAY,MAAMC,MAAO,CAAEzB,OAAQ,QAAS0B,MAAO,QAAxD,SACI,cAAC,IAAD,CAAgBF,UAAY,MACxBG,iBAAkB,CAACC,IAAK,2CACxBxB,OAAQc,KAAKf,MAAMC,OACnBG,KAAMW,KAAKf,MAAMI,KAHrB,SAKA,cAAC,EAAD,CAEIF,IAAOa,KAAKf,MAAMC,OAAOC,IACzBC,IAAOY,KAAKf,MAAMC,OAAOE,IACzBT,IAAOA,e,GA9CbgC,IAAMC,WAuDT5B,ICgIA6B,MAtLf,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,QCPSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bc9caee4.chunk.js","sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useParams } from \"react-router-dom\"\r\n// import API from \"../../utils/API\";\r\n\r\nimport GoogleMapReact from 'google-map-react'\r\nimport React from \"react\";\r\n// import { useSearchParams } from 'react-router-dom'\r\n// import iss from '../../assets/Images/International_Space_Station_white.svg.png'\r\n\r\nconst ISS_URL = \"http://api.open-notify.org/iss-now.json\"\r\n// const MAP_KEY = process.env.REACT_APP_MAP_KEY\r\nconst img = <img src = \"../../assets/Images/International_Space_Station_white.svg.png\" alt = \"iss\" height = \"30px\"/>\r\nconst SpaceStation = ({ img }) => <div>{img}</div>\r\n\r\nclass Map extends React.Component{\r\n    state = {\r\n        center: {\r\n            lat: 0,\r\n            lng: 0\r\n        },\r\n        zoom: 1\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCoordinates()\r\n        this.interval = setInterval(this.getCoordinates, 3000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    getCoordinates = () => {\r\n        fetch(ISS_URL)\r\n            .then(res => res.json())\r\n            .then(data => this.setState({\r\n                center: {\r\n                    lat: data.iss_position.latitude,\r\n                    lng: data.iss_position.longitude\r\n                }\r\n            }))\r\n    }\r\n\r\n    render(){\r\n        console.log(\"LAT:\", this.state.center.lat)\r\n        console.log(\"LNG:\", this.state.center.lng)\r\n        return(\r\n            <div>\r\n                <p>Latitude: {this.state.center.lat}</p>\r\n                <p>Longitude: {}</p>\r\n                <div className = \"map\" style={{ height: '100vh', width: '100%' }}>\r\n                    <GoogleMapReact className = \"map\"\r\n                        bootstrapURLKeys={{key: 'AIzaSyBPEAWkce7s-bwIJV7yMw_5oOt0N1kRPk0' }}\r\n                        center={this.state.center}\r\n                        zoom={this.state.zoom}\r\n                    >\r\n                    <SpaceStation\r\n\r\n                        lat = {this.state.center.lat}\r\n                        lng = {this.state.center.lng}\r\n                        img = {img}\r\n                    />\r\n                    </GoogleMapReact>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Map\r\n\r\n// YT vid (kp)\r\n// IssCard.defaultprops = {\r\n//     center: {\r\n//         lat: 47.6062,\r\n//         lng: 122.3321,\r\n//     },\r\n//     zoom: 6,\r\n// }\r\n// function IssCard () {\r\n//     const [center,setCenter]= useState(\r\n//         {\r\n//             issCenter: {\r\n//                 lat: 47.6062,\r\n//                 lng: 122.3321,\r\n//             },\r\n//             zoom: 6,\r\n//         }\r\n//     )\r\n//     setCenter({issCenter.lat:\"\", issCenter.lng:\"\"})\r\n//     return <div className='Iss-card-container'>\r\n//         <GoogleMapReact\r\n//             bootstrapURLKeys={{ key:'AIzaSyBPEAWkce7s-bwIJV7yMw_5oOt0N1kRPk0' }}\r\n//             defaultCenter={center.issCenter}\r\n//             defaultZoom={center.zoom}\r\n//         >\r\n//             <img \r\n//                 src={iss} \r\n//                 alt=\"iss-icon\" \r\n//                 className=\"iss-icon\" \r\n//                 lat={center.issCenter.lat}\r\n//                 lng={center.issCenter.lng}\r\n//             />\r\n\r\n//         </GoogleMapReact>\r\n//     </div>\r\n// }\r\n\r\n// IssCard.defaultprops = {\r\n//     center: {\r\n//         lat: 47.6062,\r\n//         lng: 122.3321,\r\n//     },\r\n//     zoom: 6,\r\n// }\r\n\r\n// export default IssCard","import './App.css';\r\n// import React, { useState, useEffect } from \"react\";\r\n// import API from \"./utils/api.js\"\r\n// import LoginForm from \"./components/LoginForm\";\r\n// import SignupForm from \"./components/SignupForm\";\r\n// import Navbar from './components/NavBar';\r\n// import { BrowserRouter as BrowserRouter, Routes, Route, Link, Redirect } from \"react-router-dom\"\r\n// import Home from \"./pages/Home\";\r\n// import Preferences from \"./pages/Preferences\";\r\n// import Profile from \"./pages/Profile\";\r\n// kp Map & axios\r\nimport Map from \"./components/IssCard/Map\";\r\n// import axios from 'axios';\r\n\r\n// try 2 kp\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h3>ISS Tracker</h3>\r\n      <Map />\r\n    </div>\r\n  );\r\n}\r\n\r\n// try 2 kp\r\n\r\n// kp TRY 1\r\n// function App() {\r\n//   const [loading, SetLoading] = useState(false)\r\n//   const [longitude, setLongitude] = useState(122.3321)\r\n//   const [latitude, setLatitude] = useState(47.6062)\r\n\r\n//   useEffect(() => {\r\n//     getLocation()\r\n\r\n//   }, [])\r\n\r\n//   const getLocation = async () => {\r\n//       try {\r\n//         SetLoading(true)\r\n//         const res = await axios.get('http://api.open-notify.org/iss-now.json')\r\n//         const { longitude, latitude } = await res.data.iss_position\r\n\r\n//         setLongitude(parseFloat(longitude))\r\n//         setLatitude(parseFloat(latitude))\r\n//         SetLoading(false)\r\n//       }\r\n//       catch (error) {\r\n//         throw new Error(error)\r\n//       }\r\n//   }\r\n\r\n//   return <div className='App'>\r\n//     {!loading ? (\r\n//       <IssCard center={{ lat: latitude, lng: longitude }} zoom={6} />\r\n//     ) : (\r\n//       <h1>Loading</h1>\r\n//     )}\r\n//   </div>\r\n// }\r\n// kp TRY 1\r\n\r\n// function App() {\r\n//   // User Login\r\n//   const [userState, setUserState] = useState({\r\n//     email: \"\",\r\n//     id: 0\r\n//   });\r\n//   // Token \r\n//   const [token, setToken] = useState(\"\")\r\n//   // Login Form\r\n//   const [loginFormState, setLoginFormState] = useState({\r\n//     email: \"\",\r\n//     password: \"\"\r\n//   });\r\n//   // Signup Form\r\n//   const [signupFormState, setSignupFormState] = useState({\r\n//     email: \"\",\r\n//     password: \"\"\r\n//   })\r\n//   // Navbar\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Navbar />\r\n//     </div>\r\n//   )\r\n\r\n//   useEffect(() => {\r\n//     const myToken = localStorage.getItem(\"token\");\r\n//     console.log(\"Token:\" + myToken)\r\n//     if (myToken) {\r\n//       API.getProfile(myToken).then(res => {\r\n//         console.log(\"worked\")\r\n//         setToken(myToken)\r\n//         setUserState({\r\n//           email: res.data.email,\r\n//           id: res.data.id\r\n//         })\r\n//       }).catch(err => {\r\n//         console.log(\"failed\")\r\n//         console.log(err)\r\n//         localStorage.removeItem('token')\r\n//       })\r\n//     }\r\n//   }, [])\r\n\r\n//   const handleLoginChange = event => {\r\n//     if (event.target.name === \"email\") {\r\n//       setLoginFormState({\r\n//         ...loginFormState,\r\n//         email: event.target.value\r\n//       })\r\n//     } else {\r\n//       setLoginFormState({\r\n//         ...loginFormState,\r\n//         password: event.target.value\r\n//       })\r\n//     }\r\n//   }\r\n//   const handleSignupChange = event => {\r\n//     if (event.target.name === \"email\") {\r\n//       setSignupFormState({\r\n//         ...signupFormState,\r\n//         email: event.target.value\r\n//       })\r\n//     } else {\r\n//       setSignupFormState({\r\n//         ...signupFormState,\r\n//         password: event.target.value\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   const handleLoginSubmit = e => {\r\n//     e.preventDefault();\r\n//     API.login(loginFormState).then(res => {\r\n//       console.log(res.data)\r\n//       setUserState({\r\n//         email: res.data.user.email,\r\n//         id: res.data.user.id\r\n//       })\r\n//       setToken(res.data.token)\r\n//       localStorage.setItem(\"token\", res.data.token)\r\n//     }).catch(err => {\r\n//       console.log(err);\r\n//     })\r\n\r\n//   }\r\n//   const handleSignupSubmit = e => {\r\n//     e.preventDefault();\r\n//     API.signup(signupFormState).then(res => {\r\n//       API.login(signupFormState).then(res => {\r\n//         console.log(res.data)\r\n//         setUserState({\r\n//           email: res.data.user.email,\r\n//           id: res.data.user.id\r\n//         })\r\n//         setToken(res.data.token)\r\n//         localStorage.setItem(\"token\", res.data.token)\r\n//       }).catch(err => {\r\n//         console.log(err);\r\n//       })\r\n//     })\r\n//   }\r\n\r\n//   const logMeOut = () => {\r\n//     setUserState({ email: '', id: 0 })\r\n//     setToken(\"\");\r\n//     localStorage.removeItem(\"token\")\r\n//   }\r\n\r\n//   return (\r\n//     <BrowserRouter>\r\n//       {!userState.email ? (\r\n//         <div>\r\n//           <LoginForm submit={handleLoginSubmit} change={handleLoginChange} loginState={loginFormState} />\r\n//           <SignupForm submit={handleSignupSubmit} change={handleSignupChange} signupState={signupFormState} />\r\n//         </div>\r\n//       ) : (\r\n//         <div>\r\n//           <h1>Ready to go stargazing, {userState.user_name}?</h1>\r\n//           <button onClick={logMeOut}>Logout</button>\r\n//           <Link to=\"/\">Home</Link>\r\n//           <Link to={`/profile/${userState.id}`}>Profile</Link>\r\n//         </div>\r\n//       )}\r\n//       <div className=\"App\">\r\n//         <Navbar />\r\n//         <Routes>\r\n//           <Route exact path='/' element={<Home />} user={userState} token={token} />\r\n//           <Route exact path='/preferences' element={<Preferences />} user={userState} token={token} />\r\n//           <Route exact path='/profile' element={<Profile />} user={userState} token={token} />\r\n//         </Routes>\r\n//       </div>\r\n//     </BrowserRouter>);\r\n// }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}